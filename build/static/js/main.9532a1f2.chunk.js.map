{"version":3,"sources":["services/persons.js","components/Form.js","components/Display.js","components/Search.js","App.js","index.js"],"names":["baseUrl","obj","axios","post","then","response","data","get","id","delete","newObj","put","Form","name","setName","salary","setSalary","email","setEmail","designation","setDesignation","persons","setPersons","useState","errMsg","setErrMsg","onSubmit","event","preventDefault","isNaN","exists","find","person","window","confirm","personService","map","rtnObj","concat","htmlFor","required","onChange","target","value","type","style","color","list","Display","width","marginLeft","marginRight","border","onClick","editPerson","editHandler","filter","Search","searchWord","RegExp","selName","search","length","finalPerson","alert","newPersons","selPerson","rtnPsn","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9532a1f2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = '/api/persons'\r\n\r\nconst create = obj => {\r\n    const request = axios.post(baseUrl, obj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst removeOne = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObj) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObj)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { create, getAll, removeOne, update }","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Form = ({\r\n    name,\r\n    setName,\r\n    salary,\r\n    setSalary,\r\n    email,\r\n    setEmail,\r\n    designation,\r\n    setDesignation,\r\n    persons, setPersons}) => {\r\n    \r\n  const [ errMsg, setErrMsg ] = useState(null)\r\n\r\n  const submitHandler = event => {\r\n      event.preventDefault()\r\n      if(isNaN(salary)){\r\n        setErrMsg('Must be a number')\r\n        return 0\r\n      }\r\n      const obj = {\r\n          name,\r\n          email,\r\n          salary,\r\n          designation\r\n      }\r\n      const exists = persons.find(person => person.email === obj.email)\r\n      if(exists){\r\n        const result = window.confirm('Do you want to update the existing entity?')\r\n        if(result){\r\n            personService.update(exists.id, obj)\r\n            .then(newObj => {\r\n                setPersons(persons.map(person => person.email !== obj.email ?  person : newObj))\r\n            })\r\n        }\r\n      }\r\n      else{\r\n      personService.create(obj)\r\n      .then(rtnObj => setPersons(persons.concat(rtnObj)))\r\n      }\r\n      setName('')\r\n      setSalary('')\r\n      setEmail('')\r\n      setDesignation('')\r\n      setErrMsg(null)\r\n      \r\n  }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}> \r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input name=\"name\" id=\"name\" required onChange={({target}) => setName(target.value)} value={name} /><br/>\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input name=\"email\" type=\"email\" id=\"email\" required onChange={({target}) => setEmail(target.value)} value={email} /><br/>\r\n            <label htmlFor=\"salary\">Salary:</label>\r\n            <input name=\"salary\" id=\"salary\" required onChange={({target}) => setSalary(target.value)} value={salary} /> <span style={{color: \"red\"}}>{errMsg}</span> <br/>\r\n            <label htmlFor=\"designation\">Designation:</label>\r\n            <input name=\"designation\" id=\"designation\" list=\"design\" required onChange={({target}) => setDesignation(target.value)} value={designation} /><br/>\r\n            <datalist id=\"design\">\r\n                <option value=\"Graphic designer\" />\r\n                <option value=\"Civil Engineer\" />\r\n                <option value=\"Photographer\" />\r\n                <option value=\"Web Developer\" />\r\n                <option value=\"Doctor\" />\r\n            </datalist>\r\n            <input type=\"submit\" value=\"Submit\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React from 'react';\r\nimport personService from '../services/persons'\r\n\r\nconst Display = ({\r\n    setName,\r\n    setEmail,\r\n    setSalary,\r\n    setDesignation,\r\n    persons, setPersons}) => {    \r\n    const css = {\r\n        width : \"80%\",\r\n        marginLeft : \"auto\",\r\n        marginRight: \"auto\",\r\n        border: \"1px solid\"\r\n    }\r\n\r\n    const deleteHandler = id => {\r\n        personService.removeOne(id)\r\n        .then(rtnObj => {\r\n            setPersons(persons.filter(person => person.id!==id))\r\n        })\r\n    } \r\n\r\n    const editHandler = id => {\r\n        const editPerson = persons.find(person => person.id===id)\r\n        setName(editPerson.name)\r\n        setEmail(editPerson.email)\r\n        setSalary(editPerson.salary)\r\n        setDesignation(editPerson.designation)\r\n    }\r\n\r\n    return(\r\n        <table style={css}>\r\n            <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th>Salary</th>\r\n                <th>Designation</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {persons.map(person =>\r\n                <tr key={person.id}>\r\n                    <td> {person.name} </td>\r\n                    <td> {person.email} </td>\r\n                    <td> {person.salary} </td>\r\n                    <td> {person.designation} </td>\r\n                    <td><button onClick={() => editHandler(person.id)} >Edit</button>/<button onClick={() => deleteHandler(person.id)}>Delete</button></td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Display","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Search = ({ persons, setPersons }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const searchHandler = event => {\r\n        event.preventDefault()\r\n        if(name!=='' && email!==''){\r\n            const searchWord = new RegExp(name, 'i')\r\n            const selName = persons.filter(person => {\r\n                if(person.name.search(searchWord) !== -1)\r\n                return person\r\n\r\n                return false\r\n            })\r\n            if(selName.length > 0){\r\n                const finalPerson = selName.find(person => person.email === email)\r\n                persons.length = 0\r\n            setPersons(persons.concat(finalPerson))\r\n            }\r\n            else{\r\n                alert(`No person's email exists with this name, try again!`)\r\n            }\r\n            setName('')\r\n        setEmail('')\r\n        }\r\n        else if(name!=='' && email===''){\r\n            const searchWord = new RegExp(name, 'i')\r\n            const newPersons = persons.filter(person => {\r\n                if(person.name.search(searchWord) !== -1)\r\n                return person\r\n\r\n                return false\r\n            })\r\n            setPersons(newPersons)\r\n            setName('')\r\n        }\r\n        else if(name==='' && email!==''){\r\n            const selPerson = persons.find(person => person.email===email)\r\n            persons.length = 0\r\n            setPersons(persons.concat(selPerson))\r\n            setEmail('')\r\n        }\r\n        else{\r\n            personService.getAll()\r\n            .then(rtnPsn => setPersons(rtnPsn))            \r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={searchHandler} >\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input name=\"name\" id=\"name\" onChange={({ target }) => setName(target.value)} value={name} />\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input name=\"email\" type=\"email\" id=\"email\" onChange={({ target }) => setEmail(target.value)} value={email} />\r\n            <input type=\"submit\" value=\"Search\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useState, useEffect } from 'react'\r\nimport Form from './components/Form'\r\nimport Display from './components/Display'\r\nimport personService from './services/persons'\r\nimport Search from './components/Search'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ name, setName ] = useState('')\r\n  const [ email, setEmail ] = useState('')\r\n  const [ salary, setSalary ] = useState('')\r\n  const [ designation, setDesignation ] = useState('') \r\n\r\n  useEffect(() => {\r\n    personService.getAll()\r\n    .then(rtnPsn => setPersons(rtnPsn))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Form \r\n      name={name}\r\n      setName={setName}\r\n      salary={salary}\r\n      setSalary={setSalary}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      designation={designation}\r\n      setDesignation={setDesignation}\r\n      persons={persons} setPersons={setPersons} />\r\n      <Search persons={persons} setPersons={setPersons} />\r\n      <Display \r\n      setName={setName}\r\n      setEmail={setEmail}\r\n      setSalary={setSalary}\r\n      setDesignation={setDesignation}\r\n      persons={persons} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}